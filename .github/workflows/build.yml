name: Flutter APK CI

on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/lock.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: '3.35.2'
          cache: true

      # Ha nincs android/ mappa, gener√°ljuk (k√©s≈ëbb takar√≠tunk)
      - name: Ensure Android folder (safe)
        run: |
          [ -d android ] || flutter create --platforms=android --no-pub .

      - name: Git cleanup for pub git deps (strong)
        run: |
          set -e
          git config --global --unset-all "http.https://github.com.extraheader" || true
          git config --global --unset-all "http.https://github.com.insteadof" || true

      - name: Resolve packages
        run: flutter pub get

      - name: Force debug signing for release (dev only)
        run: bash ci/force_debug_release.sh

      - name: Generate launcher icons if asset present
        shell: bash
        run: |
          if [ -f assets/icon/icon.png ]; then
            flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-android.yaml
          else
            echo "assets/icon/icon.png not found, skipping launcher icon generation."
          fi

      - name: Generate native splash (if configured)
        shell: bash
        run: |
          if grep -Eq '^\s*flutter_native_splash\s*:' pubspec.yaml; then
            flutter pub run flutter_native_splash:create
          else
            echo "No flutter_native_splash config in pubspec.yaml, skipping splash."
          fi

      # --- V1 marad√©k automata takar√≠t√°s a forr√°s manifest(ek)ben ---
      - name: Fix legacy V1 ApplicationName in source manifests
        shell: bash
        run: |
          set -e
          shopt -s globstar || true
          fixed=0
          for f in android/app/src/**/AndroidManifest.xml; do
            [ -f "$f" ] || continue
            if grep -q 'android:name="${applicationName}"' "$f"; then
              echo "Fixing: $f"
              sed -i 's/\s*android:name="${applicationName}"//g' "$f"
              fixed=$((fixed+1))
            fi
          done
          echo "Fixed files: $fixed"
          # forr√°s fa ellen≈ërz√©se
          if grep -Rni --include="AndroidManifest.xml" 'applicationName\|FlutterApplication\|io\.flutter\.app' android/app/src; then
            echo "‚ùå V1 nyom maradt a forr√°s manifestben."
            exit 1
          fi
          echo "‚úÖ Forr√°s manifest(ek) V1-tiszta."

      # --- Merged manifest ellen≈ërz√©s (ez d√∂nt a buildr≈ël) ---
      - name: Verify merged manifest is V2-only
        shell: bash
        working-directory: android
        run: |
          set -e
          ./gradlew :app:processDebugMainManifest --no-daemon --stacktrace
          MERGED="app/build/intermediates/merged_manifests/debug/AndroidManifest.xml"
          if [ ! -f "$MERGED" ]; then
            echo "‚ùå Merged manifest not found at $MERGED"
            find app/build/intermediates/merged_manifests -maxdepth 2 -type f -name AndroidManifest.xml || true
            exit 1
          fi
          echo "Merged manifest at: $MERGED"
          echo "---- offending lines (if any) ----"
          if grep -nE 'applicationName|FlutterApplication|io\.flutter\.app' "$MERGED"; then
            echo "----------------------------------"
            echo "‚ùå A merged manifest m√©g V1-nyomot tartalmaz. L√°sd fent a sorokat."
            exit 1
          fi
          echo "‚úÖ Merged manifest V2-tiszta."

      # (opcion√°lis) figyelmeztet√©s 3rd party V1 pluginek k√≥dj√°ra ‚Äì regex egyszer≈±s√≠tve, nincs ( ) hiba
      - name: Detect legacy Android v1 plugins (warn-only)
        shell: bash
        run: |
          set -e
          ROOT="$HOME/.pub-cache/hosted/pub.dev"
          echo "üîé Scanning $ROOT for PluginRegistry usage (warn-only)"
          hits=$(grep -RIl 'io\.flutter\.plugin\.common\.PluginRegistry' "$ROOT" | grep -E '/android/src/main/.*\.(java|kt)$' | grep -Ev '/(example|examples|test|androidTest)/' || true)
          if [ -n "$hits" ]; then
            echo "‚ö†Ô∏è Possible v1 plugin shims (warn-only):"
            echo "$hits" | sed 's#^#  - #'
          else
            echo "‚úÖ No obvious v1 plugin shims."
          fi

      - name: Build DEBUG APK (dev-friendly signing)
        run: |
          flutter build apk --debug \
            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      - uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      - uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
