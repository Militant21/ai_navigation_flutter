name: Flutter APK CI

on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/lock.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Forrás lehúzása
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
  
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'


      # 2) Flutter környezet
      - name: Set up Flutter
        id: flutter_setup
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.2"
          cache: false

        # 3) Egyetlen forrásból írjuk a local.properties-t
      - name: Write local.properties (single source of truth)
        shell: bash
        run: |
          mkdir -p android
          echo "flutter.sdk=${FLUTTER_ROOT}" > android/local.properties
          echo "sdk.dir=${ANDROID_SDK_ROOT}" >> android/local.properties
          echo "=== android/local.properties ==="
          cat android/local.properties

      # 4) Gradle cache
      #- name: Cache Gradle
        #uses: gradle/gradle-build-action@v2

      # 5) Git cleanup pub git deps (maradhat)
      - name: Git cleanup for pub git deps (strong)
        run: |
          set -e
          git config --global --unset-all "http.https://github.com.extrah eader" || true
          git config --global --unset-all "http.https://github.com.insteadof" || true

      # 6) Pub csomagok
      - name: Resolve packages
        run: flutter pub get

      # 7) (opcionális) dev-barát release signing script
      - name: Force debug signing for release (dev only)
        run: bash ci/force_debug_release.sh

      # 8) (opcionális) ikon generálás, csak ha van kép
      - name: Generate launcher icons if asset present
        shell: bash
        run: |
          if [ -f assets/icon/icon.png ]; then
            flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-android.yaml
          else
            echo "assets/icon/icon.png not found, skipping launcher icon generation."
          fi

      # 9) (opcionális) splash generálás, ha konfigurálva
      - name: Generate native splash (if configured)
        shell: bash
        run: |
          if grep -q '^[[:space:]]*flutter_native_splash:' pubspec.yaml; then
            flutter pub run flutter_native_splash:create
          else
            echo "No flutter_native_splash config in pubspec, skipping splash."
          fi

      # 10) Régi V1 plugin implementációk detektálása (warn only)
      - name: Detect legacy V1 Android UI plugins (warn-only)
        shell: bash
        run: |
          set -e
          ROOT="$HOME/.pub-cache"
          hits="$(grep -RIl \
            -e 'io\.flutter\.plugin\.common\.PluginRegistry' \
            -e 'registerWith\(PluginRegistry' \
            "$ROOT/hosted/pub.dev" \
            | grep -E '/android/src/main/.+\.(java|kt)$' \
            | grep -Ev '(example|examples|test|androidTest)' || true)"
          if [ -n "$hits" ]; then
            echo "Legacy v1 plugin shims detected (warning only):"
            echo "$hits" | sed 's/^/ - /'
          else
            echo "No legacy v1 plugin implementations found."
          fi

      - name: Preload local Gradle distribution
        run: |
           mkdir -p android/gradle/wrapper/gradle
           curl -L https://services.gradle.org/distributions/gradle-8.9-all.zip \
           -o android/gradle/wrapper/gradle/gradle-8.9-all.zip

      # 11) DIAGNOSZTIKA: tényleg bent van-e a Flutter embedding a classpathon?
      - name: Gradle deps (check Flutter embedding)
        shell: bash
        run: |
          cd android
          ./gradlew :app:dependencies --configuration debugCompileClasspath || true

      - name: Debug Gradle environment
        run: |
           ./gradlew -q :app:tasks --all | grep -i flutter || true
           ./gradlew :app:dependencies --configuration debugCompileClasspath || true
           ./gradlew :app:buildEnvironment || true
           cat android/local.properties || true

      - name: Debug Gradle environment (android/)
        working-directory: android
        run: |
          ./gradlew -v
          ./gradlew :app:tasks --all | grep -i flutter || true
          ./gradlew :app:dependencies --configuration debugCompileClasspath || true
          ./gradlew :app:buildEnvironment || true
          cat local.properties || true

      - name: Check Flutter embedding in classpath (debug/release)
        run: |
          cd android
          ./gradlew :app:dependencies --configuration debugCompileClasspath | grep -i flutter || true
          ./gradlew :app:dependencies --configuration releaseCompileClasspath | grep -i flutter || true
     
      # 12) DEBUG build (dev-friendly signing)
      - name: Build DEBUG APK (dev-friendly signing)
        run: |
          flutter build apk --debug \
            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date '+%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      # 13) RELEASE build (minify + shrink)
      - name: Build RELEASE APK (minify + shrink)
        run: |
          flutter build apk --release \
            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date '+%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      # 14) Ellenőrzés: merged manifest csak V2-es?
      - name: Verify merged manifest is V2-only
        shell: bash
        run: |
          set -e
          MERGED="app/build/intermediates/merged_manifests/debug/AndroidManifest.xml"
          if [ ! -f "$MERGED" ]; then
            echo "Merged manifest not found: $MERGED"
            exit 1
          fi
          if grep -nE 'applicationName|FlutterApplication|io\.flutter\.app|GeneratedPluginRegistrant' "$MERGED"; then
            echo "Merged manifest still contains V1-related entries."
            exit 1
          fi
          echo "Merged manifest is clean (V2-only)."

      # 15) Artifact feltöltés (debug APK)
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
