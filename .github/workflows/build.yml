name: build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (Temurin 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: stable
          cache: true

      # android/ létrehozása, ha még nincs
      - name: Ensure Android folder exists
        run: |
          if [ ! -d android ]; then
            flutter create --platforms=android .
          fi

      # Gradle 8.3 + AGP 8.1.0 minden érintett helyen
      - name: Patch Gradle/AGP for Java 21 (Gradle 8.3, AGP 8.1.0)
        run: |
          set -e
          # 1) Gradle wrapper -> 8.3
          if [ -f android/gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i -E 's#^distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.3-all.zip#' android/gradle/wrapper/gradle-wrapper.properties
          fi

          # 2) AGP -> 8.1.0 (root build.gradle / build.gradle.kts: buildscript classpath)
          for f in android/build.gradle android/build.gradle.kts; do
            [ -f "$f" ] || continue
            sed -i -E 's/com\.android\.tools\.build:gradle:[0-9.]+/com.android.tools.build:gradle:8.1.0/g' "$f"
          done

          # 3) AGP -> 8.1.0 (plugins DSL variánsok root+app szinten)
          for f in android/build.gradle android/build.gradle.kts android/app/build.gradle android/app/build.gradle.kts; do
            [ -f "$f" ] || continue
            # Groovy: id 'com.android.application' version 'x'
            sed -i -E "s/(id[[:space:]]+'com\.android\.application'[[:space:]]+version[[:space:]]+')([0-9.]+)(')/\\1 8.1.0 \\3/g" "$f"
            # KTS: id("com.android.application") version "x"
            sed -i -E 's/(id\("com\.android\.application"\)[[:space:]]+version[[:space:]]+")([0-9.]+)("/\1 8.1.0 \3/g' "$f"
            # Groovy: id 'com.android.library' version 'x'
            sed -i -E "s/(id[[:space:]]+'com\.android\.library'[[:space:]]+version[[:space:]]+')([0-9.]+)(')/\\1 8.1.0 \\3/g" "$f"
            # KTS: id("com.android.library") version "x"
            sed -i -E 's/(id\("com\.android\.library"\)[[:space:]]+version[[:space:]]+")([0-9.]+)("/\1 8.1.0 \3/g' "$f"
          done

          echo "== Gradle wrapper =="
          grep -n '^distributionUrl=' android/gradle/wrapper/gradle-wrapper.properties || true
          echo "== AGP refs =="
          grep -RniE 'com\.android\.tools\.build:gradle|id\([\"\x27]com\.android\.' android | sed -e 's/^/  /' || true

      # minSdk=30 mindenhol + compileOptions/jvmTarget 17 az app modulban
      - name: Force minSdk=30 + Java/Kotlin 17 in app
        run: |
          set -e
          # Groovy app
          if [ -f android/app/build.gradle ]; then
            sed -i -E 's/^[[:space:]]*minSdkVersion[[:space:]]+.*/        minSdkVersion 30/' android/app/build.gradle || true
            grep -q 'minSdkVersion' android/app/build.gradle || sed -i "/defaultConfig[[:space:]]*{/a\        minSdkVersion 30" android/app/build.gradle

            # compileOptions
            grep -q 'compileOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }" android/app/build.gradle
            # kotlinOptions
            grep -q 'kotlinOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    kotlinOptions {\n        jvmTarget = \"17\"\n    }" android/app/build.gradle
          fi

          # KTS app
          if [ -f android/app/build.gradle.kts ]; then
            sed -i -E 's/^[[:space:]]*minSdk[[:space:]]*=[[:space:]]*.*/        minSdk = 30/' android/app/build.gradle.kts || true
            grep -q '^[[:space:]]*minSdk[[:space:]]*=' android/app/build.gradle.kts || sed -i "/defaultConfig[[:space:]]*{/a\        minSdk = 30" android/app/build.gradle.kts

            grep -q 'compileOptions' android/app/build.gradle.kts || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }" android/app/build.gradle.kts
            sed -i -E 's/jvmTarget[[:space:]]*=[[:space:]]*"?[0-9]+"?/jvmTarget = "17"/' android/app/build.gradle.kts || true
          fi

          # Flutter kulcs (biztos ami biztos)
          if [ -f android/gradle.properties ]; then
            if grep -q '^flutter.minSdkVersion=' android/gradle.properties; then
              sed -i -E 's/^flutter\.minSdkVersion=.*/flutter.minSdkVersion=30/' android/gradle.properties
            else
              echo 'flutter.minSdkVersion=30' >> android/gradle.properties
            fi
          else
            echo 'flutter.minSdkVersion=30' > android/gradle.properties
          fi

          echo "== minSdk sources =="
          grep -n 'minSdk' android/app/build.gradle* 2>/dev/null || true
          grep -n '^flutter.minSdkVersion' android/gradle.properties 2>/dev/null || true

      - name: flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
