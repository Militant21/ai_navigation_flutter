name: ci-build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: stable
          cache: true

      # Android mappa a CI-ben készül, ha hiányzik
      - name: Create android/ if missing
        run: |
          if [ ! -d android ]; then
            flutter create --platforms=android .
          fi

      - name: Patch Gradle wrapper -> 8.3 and AGP -> 8.1.0
        shell: bash
        run: |
          set -e
          if [ -f android/gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i -E 's#^distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.3-all.zip#' android/gradle/wrapper/gradle-wrapper.properties || true
          fi
          for f in android/build.gradle android/build.gradle.kts; do
            [ -f "$f" ] && sed -i -E 's/com\.android\.tools\.build:gradle:[0-9.]+/com.android.tools.build:gradle:8.1.0/g' "$f" || true
          done
          # kotlin/jvm target 17
          if [ -f android/app/build.gradle ]; then
            grep -q 'kotlinOptions' android/app/build.gradle || \
              sed -i '/android {/a\    kotlinOptions {\n        jvmTarget = "17"\n    }' android/app/build.gradle
            sed -i -E 's/jvmTarget( |=)\"?[0-9]+\"?/jvmTarget = "17"/' android/app/build.gradle || true
          fi
          if [ -f android/app/build.gradle.kts ]; then
            grep -q 'kotlinOptions' android/app/build.gradle.kts || \
              sed -i '/android {/a\    kotlinOptions {\n        jvmTarget = "17"\n    }' android/app/build.gradle.kts
            sed -i -E 's/jvmTarget\s*=\s*\"?[0-9]+\"?/jvmTarget = "17"/' android/app/build.gradle.kts || true
          fi

      - name: Force minSdk=28 (project + plugins)
        shell: bash
        run: |
          set -e
          # app module (Groovy)
          if [ -f android/app/build.gradle ]; then
            sed -i -E 's/minSdkVersion\s+[0-9]+/minSdkVersion 28/g' android/app/build.gradle || true
            sed -i -E '/defaultConfig\s*{/,/}/ s/minSdk\s*=\s*[0-9]+/minSdk = 28/' android/app/build.gradle || true
          fi
          # app module (KTS)
          if [ -f android/app/build.gradle.kts ]; then
            sed -i -E '/defaultConfig\s*{/,/}/ s/minSdk\s*=\s*[0-9]+/minSdk = 28/' android/app/build.gradle.kts || true
          fi
          # Flutter override kulcs
          if [ -f android/gradle.properties ]; then
            if grep -q '^flutter.minSdkVersion=' android/gradle.properties; then
              sed -i -E 's/^flutter\.minSdkVersion=.*/flutter.minSdkVersion=28/' android/gradle.properties
            else
              echo 'flutter.minSdkVersion=28' >> android/gradle.properties
            fi
          else
            echo 'flutter.minSdkVersion=28' > android/gradle.properties
          fi
          # plugin manifest <uses-sdk> törlés (ne kényszerítsen 21-et)
          if [ -d build ]; then
            find build -type f -name AndroidManifest.xml -print0 | xargs -0 -I{} sed -i -E '/<uses-sdk.*>/d' "{}" || true
          fi

      - name: flutter pub get
        run: flutter pub get

      - name: Build APK (release)
        run: flutter build apk --release

      # Mindig feltöltjük az android/ mappát, még bukásnál is
      - name: Upload android folder (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-folder
          path: android

      - name: Upload release APK (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: ignore
