name: build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: stable
        # cache: true  # (opcionális)

      - name: Ensure Android folder exists
        run: flutter create --platforms=android .

      - name: Patch Gradle wrapper to 8.3 + AGP 8.1.0
        shell: bash
        run: |
          set -e
          # Gradle wrapper -> 8.3
          if [ -f android/gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i -E 's#^distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.3-all.zip#' android/gradle/wrapper/gradle-wrapper.properties
          fi
          # AGP -> 8.1.0 (mind Groovy, mind KTS variánsok)
          for f in android/build.gradle android/build.gradle.kts; do
            [ -f "$f" ] || continue
            sed -i -E 's/com\.android\.tools\.build:gradle:[0-9.]+/com.android.tools.build:gradle:8.1.0/g' "$f" || true
            sed -i -E "s/(id[[:space:]]+'com\.android\.(application|library)'.*version[[:space:]]+')([0-9.]+)(')/\1 8.1.0 \4/g" "$f" || true
            sed -i -E 's/(id\("com\.android\.(application|library)"\)\s+version\s+")([0-9.]+)("/\1 8.1.0 \3/g' "$f" || true
          done

      - name: Force minSdk=30 + JVM target 17
        shell: bash
        run: |
          set -e
          # Groovy app build.gradle
          if [ -f android/app/build.gradle ]; then
            sed -i -E 's/^[[:space:]]*minSdkVersion[[:space:]]+.*/        minSdkVersion 30/' android/app/build.gradle || true
            grep -q 'minSdkVersion' android/app/build.gradle || sed -i "/defaultConfig[[:space:]]*{/a\        minSdkVersion 30" android/app/build.gradle
            grep -q 'compileOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }" android/app/build.gradle
            grep -q 'kotlinOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    kotlinOptions {\n        jvmTarget = \"17\"\n    }" android/app/build.gradle
          fi
          # KTS app build.gradle.kts
          if [ -f android/app/build.gradle.kts ]; then
            sed -i -E 's/^[[:space:]]*minSdk[[:space:]]*=[[:space:]]*[0-9]+/        minSdk = 30/' android/app/build.gradle.kts || true
            grep -q '^[[:space:]]*minSdk[[:space:]]*=' android/app/build.gradle.kts || sed -i "/defaultConfig[[:space:]]*{/a\        minSdk = 30" android/app/build.gradle.kts
            grep -q 'compileOptions' android/app/build.gradle.kts || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }" android/app/build.gradle.kts
            sed -i -E 's/jvmTarget[[:space:]]*=[[:space:]]*"?[0-9]+"?/jvmTarget = "17"/' android/app/build.gradle.kts || true
          fi
          # Flutter override kulcs
          if [ -f android/gradle.properties ]; then
            if grep -q '^flutter\.minSdkVersion=' android/gradle.properties; then
              sed -i -E 's/^flutter\.minSdkVersion=.*/flutter.minSdkVersion=30/' android/gradle.properties
            else
              echo 'flutter.minSdkVersion=30' >> android/gradle.properties
            fi
          else
            echo 'flutter.minSdkVersion=30' > android/gradle.properties
          fi

      - name: flutter pub get
        run: flutter pub get

      - name: Strip <uses-sdk> from plugin manifests (build dir)
        shell: bash
        run: |
          set -e
          if [ -d build ]; then
            find build -type f -name AndroidManifest.xml -print0 | xargs -0 -I{} sed -i -E '/<uses-sdk.*>/d' "{}"
          fi

      - name: Build APK (release)
        run: flutter build apk --release

      # --- Artifactok mindig, még hibás build után is ---
      - name: Upload android folder (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-folder
          path: android

      - name: Upload release APK (if exists)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          if-no-files-found: ignore
