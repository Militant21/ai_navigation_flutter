name: Flutter APK CI

on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/lock.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.2"
          cache: true

      - name: Ensure Android folder (safe)
        run: |
          [ -d android ] || flutter create --platforms=android --no-pub .

      - name: Git cleanup for pub git deps (strong)
        run: |
          set -e
          git config --global --unset-all "http.https://github.com.extraheader" || true
          git config --global --unset-all "http.https://github.com.insteadof" || true

      - name: Resolve packages
        run: flutter pub get

      - name: Force debug signing for release (dev only)
        run: bash ci/force_debug_release.sh

      - name: Resolve packages (again)
        run: flutter pub get

      - name: Generate launcher icons if asset present
        shell: bash
        run: |
          if [ -f assets/icon/icon.png ]; then
            flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-android.yaml
          else
            echo "assets/icon/icon.png not found, skipping launcher icon generation."
          fi

      - name: Generate native splash (if configured)
        shell: bash
        run: |
          if grep -Eq '^\s*flutter_native_splash\s*:' pubspec.yaml; then
            flutter pub run flutter_native_splash:create
          else
            echo "No flutter_native_splash config in pubspec.yaml, skipping splash."
          fi

      - name: Fix legacy V1 ApplicationName in source manifests
        shell: bash
        run: |
          set -e
          fixed=0
          while IFS= read -r -d '' mf; do
            if grep -q 'android:name=' "$mf"; then
              sed -i 's/\s*android:name="[^"]*"\s*//' "$mf"
              fixed=$((fixed+1))
            fi
            if ! grep -q 'flutterEmbedding' "$mf"; then
              sed -i 's#</application>#  <meta-data android:name="flutterEmbedding" android:value="2" />\n  </application>#' "$mf"
            fi
          done < <(find android/app/src -type f -name AndroidManifest.xml -print0)
          echo "Fixed files: $fixed"

      - name: Detect legacy Android v1 plugins (warn-only)
        shell: bash
        run: |
          set -e
          ROOT="$HOME/.pub-cache"
          hits=$(grep -RIl \
            -e 'io\.flutter\.plugin\.common\.PluginRegistry' \
            -e 'registerWith\(.*PluginRegistry' \
            "$ROOT/hosted/pub.dev" \
            | grep -E '/android/src/main/.*\.(java|kt)$' \
            | grep -Ev '/(example|examples|test|androidTest)/' || true)
          if [ -n "$hits" ]; then
            echo "Legacy v1 plugin shims detected (warning only):"
            echo "$hits" | sed 's#^#  - #'
          else
            echo "No legacy v1 plugin implementations found."
          fi
- name: Pre-merge manifest (debug) and dump it
        shell: bash
        run: |
          set -e
          cd android
          ./gradlew :app:processDebugMainManifest --no-daemon --stacktrace
          echo "---- merged manifest path:"
          MF="app/build/intermediates/merged_manifests/debug/AndroidManifest.xml"
          ls -l "$MF"
          echo "---- first 60 lines:"
          head -n 60 "$MF" || true
          echo "---- scan for V1 markers:"
          if grep -nE 'applicationName|FlutterApplication|io\.flutter\.app|GeneratedPluginRegistrant' "$MF"; then
            echo "❌ V1-nyom talált a MERGED manifestben – ezt előbb meg kell szüntetni."
            exit 1
          else
            echo "✅ Merged manifest tiszta (V2-only)."
          fi
          cd ..

      - name: Scan app sources for V1 markers
        shell: bash
        run: |
          set -e
          echo "---- scan android/app/src for V1 imports / registrant calls"
          if grep -RInE 'io\.flutter\.app|FlutterApplication|GeneratedPluginRegistrant' android/app/src; then
            echo "❌ V1-nyom talált a projekt forrásban."
            exit 1
          else
            echo "✅ Nincs V1 import a projekt kódjában."
          fi

      - name: Scan pub-cache (plugins) for hard V1 usage (warn-only)
        shell: bash
        run: |
          set -e
          ROOT="$HOME/.pub-cache/hosted/pub.dev"
          echo "---- scan plugins for real V1 impl (not shims), warn-only"
          hits=$(grep -RIl \
            -e 'io\.flutter\.plugin\.common\.PluginRegistry' \
            -e 'registerWith\(.*PluginRegistry' \
            "$ROOT" 2>/dev/null | grep -E '/android/src/main/.*\.(java|kt)$' \
            | grep -Ev '/(example|examples|test|androidTest)/' || true)
          if [ -n "$hits" ]; then
            echo "⚠️  Lehetséges V1 plugin implementáció:"
            echo "$hits" | sed 's#^#  - #'
          else
            echo "✅ Nem találtam egyértelmű V1 implementációt a pluginekben."
          fi


      - name: Build DEBUG APK (dev-friendly signing)
        run: |
          flutter build apk --debug \
            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      - name: Verify merged manifest is V2-only
        shell: bash
        run: |
          set -e
          MERGED="app/build/intermediates/merged_manifests/debug/AndroidManifest.xml"
          if [ ! -f "$MERGED" ]; then
            echo "Merged manifest not found: $MERGED"
            exit 1
          fi
          if grep -nE 'applicationName|FlutterApplication|io\.flutter\.app' "$MERGED"; then
            echo "Merged manifest still contains V1-related entries."
            exit 1
          fi
          echo "Merged manifest is clean (V2-only)."

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
