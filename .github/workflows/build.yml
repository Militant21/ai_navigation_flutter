name: build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
      ANDROID_HOME: /usr/local/lib/android/sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (Temurin 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: stable
          cache: true

      # --- SDK INSTALL #1 (Flutter előtt) ---
      - name: Pre-install Android SDK 34 + Build-Tools 34.0.0 (accept licenses, with retries)
        shell: bash
        run: |
          set -euo pipefail
          export ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT}"
          export ANDROID_HOME="${ANDROID_SDK_ROOT}"

          # cmdline-tools biztosítása
          /bin/mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          if [ ! -x "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin/sdkmanager" ]; then
            curl -fsSL -o /tmp/cmdline-tools.zip "https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip"
            /usr/bin/unzip -q -o /tmp/cmdline-tools.zip -d /tmp/cli
            /bin/rm -rf "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
            /bin/mv /tmp/cli/cmdline-tools "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
          fi

          export PATH="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools:${PATH}"

          # Licenc + komponensek több próbálkozással
          for i in 1 2 3; do
            yes | sdkmanager --licenses && break || sleep 2
          done

          for i in 1 2 3; do
            yes | sdkmanager \
              "platform-tools" \
              "platforms;android-34" \
              "build-tools;34.0.0" && break || sleep 2
          done

          # plusz: adjuk hozzá a PATH-ot a következő lépésekhez is
          {
            echo "ANDROID_SDK_ROOT=${ANDROID_SDK_ROOT}"
            echo "ANDROID_HOME=${ANDROID_SDK_ROOT}"
            echo "PATH=${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools:${PATH}"
          } >> "$GITHUB_ENV"

      # Ha nincs android/ mappa, generáljuk le (runneren van, telefonon nem számít)
      - name: Ensure Android folder exists
        run: |
          if [ ! -d android ]; then
            flutter create --platforms=android .
          fi

      # Gradle 8.3 + AGP 8.1.0 (Java 21 kompat)
      - name: Set Gradle wrapper 8.3 and AGP 8.1.0
        run: |
          set -e
          if [ -f android/gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i -E 's#^distributionUrl=.*#distributionUrl=https://services.gradle.org/distributions/gradle-8.3-all.zip#' android/gradle/wrapper/gradle-wrapper.properties
          fi
          for f in android/build.gradle android/build.gradle.kts; do
            [ -f "$f" ] || continue
            sed -i -E 's/com\.android\.tools\.build:gradle:[0-9.]+/com.android.tools.build:gradle:8.1.0/g' "$f"
          done
          for f in android/build.gradle android/build.gradle.kts android/app/build.gradle android/app/build.gradle.kts; do
            [ -f "$f" ] || continue
            sed -i -E "s/(id[[:space:]]+'com\.android\.application'[[:space:]]+version[[:space:]]+')([0-9.]+)(')/\1 8.1.0 \3/g" "$f" || true
            sed -i -E 's/(id\("com\.android\.application"\)[[:space:]]+version[[:space:]]+")([0-9.]+)("/\1 8.1.0 \3/g' "$f" || true
            sed -i -E "s/(id[[:space:]]+'com\.android\.library'[[:space:]]+version[[:space:]]+')([0-9.]+)(')/\1 8.1.0 \3/g" "$f" || true
            sed -i -E 's/(id\("com\.android\.library"\)[[:space:]]+version[[:space:]]+")([0-9.]+)("/\1 8.1.0 \3/g' "$f" || true
          done

      - name: Force minSdk=30 + JVM target 17 in app
        run: |
          set -e
          if [ -f android/app/build.gradle ]; then
            sed -i -E 's/^[[:space:]]*minSdkVersion[[:space:]]+.*/        minSdkVersion 30/' android/app/build.gradle || true
            grep -q 'minSdkVersion' android/app/build.gradle || sed -i "/defaultConfig[[:space:]]*{/a\        minSdkVersion 30" android/app/build.gradle
            grep -q 'compileOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }" android/app/build.gradle
            grep -q 'kotlinOptions' android/app/build.gradle || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    kotlinOptions {\n        jvmTarget = \"17\"\n    }" android/app/build.gradle
          fi
          if [ -f android/app/build.gradle.kts ]; then
            sed -i -E 's/^[[:space:]]*minSdk[[:space:]]*=[[:space:]]*.*/        minSdk = 30/' android/app/build.gradle.kts || true
            grep -q '^[[:space:]]*minSdk[[:space:]]*=' android/app/build.gradle.kts || sed -i "/defaultConfig[[:space:]]*{/a\        minSdk = 30" android/app/build.gradle.kts
            grep -q 'compileOptions' android/app/build.gradle.kts || sed -i "/^[[:space:]]*android[[:space:]]*{/a\    compileOptions {\n        sourceCompatibility = JavaVersion.VERSION_17\n        targetCompatibility = JavaVersion.VERSION_17\n    }" android/app/build.gradle.kts
            sed -i -E 's/jvmTarget[[:space:]]*=[[:space:]]*"?[0-9]+"?/jvmTarget = "17"/' android/app/build.gradle.kts || true
          fi
          if [ -f android/gradle.properties ]; then
            if grep -q '^flutter.minSdkVersion=' android/gradle.properties; then
              sed -i -E 's/^flutter\.minSdkVersion=.*/flutter.minSdkVersion=30/' android/gradle.properties
            else
              echo 'flutter.minSdkVersion=30' >> android/gradle.properties
            fi
          else
            echo 'flutter.minSdkVersion=30' > android/gradle.properties
          fi

      - name: flutter pub get
        run: flutter pub get

      # --- SDK INSTALL #2 (pub get után, duplázva, teljes felülírás) ---
      - name: Post-install Android SDK 34 + Build-Tools 34.0.0 (accept licenses, with retries)
        shell: bash
        run: |
          set -euo pipefail
          export ANDROID_SDK_ROOT="${ANDROID_SDK_ROOT}"
          export ANDROID_HOME="${ANDROID_SDK_ROOT}"
          export PATH="${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin:${ANDROID_SDK_ROOT}/platform-tools:${PATH}"

          # Második kör: licenc + komponensek (ha az elsőt felülírta bármi)
          for i in 1 2 3; do
            yes | sdkmanager --licenses && break || sleep 2
          done

          for i in 1 2 3; do
            yes | sdkmanager \
              --install \
              "platform-tools" \
              "platforms;android-34" \
              "build-tools;34.0.0" && break || sleep 2
          done

          sdkmanager --list || true

      - name: Build APK (release)
        run: flutter build apk --release

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
