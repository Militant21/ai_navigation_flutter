name: Flutter APK CI
on:
  push:
    paths-ignore:
      - "**/*.md"
      - ".github/workflows/lock.yml"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: flutter pub get

      - name: Ensure Android v2 embedding (safe)
        shell: bash
        run: |
          set -euo pipefail
          [ -d android/app/src/main ] || flutter create --platforms=android . --no-pub
          MANIFEST=android/app/src/main/AndroidManifest.xml
          if [ -f "$MANIFEST" ] && ! grep -q 'flutterEmbedding' "$MANIFEST"; then
            sed -i 's#</application>#  <meta-data android:name="flutterEmbedding" android:value="2" />\
  </application>#' "$MANIFEST"
          fi

      - name: Ensure minimal AndroidManifest (fallback)
        shell: bash
        run: |
          set -euo pipefail
          MANIFEST=android/app/src/main/AndroidManifest.xml
          mkdir -p android/app/src/main
          if [ ! -f "$MANIFEST" ]; then
            printf '%s\n' \
'<?xml version="1.0" encoding="utf-8"?>' \
'<manifest xmlns:android="http://schemas.android.com/apk/res/android" package="com.example.ai_navigation_flutter">' \
'  <application>' \
'    <meta-data android:name="flutterEmbedding" android:value="2" />' \
'  </application>' \
'</manifest>' > "$MANIFEST"
          fi

      - name: Ensure flutter_native_splash in dev_dependencies
        shell: bash
        run: |
          set -euo pipefail
          if ! grep -q 'flutter_native_splash' pubspec.yaml; then
            awk '
              BEGIN{in_dev=0; added=0}
              /^[[:space:]]*dev_dependencies:[[:space:]]*$/ {print; in_dev=1; next}
              /^[[:alpha:]_]/ && in_dev==1 && added==0 {print "  flutter_native_splash: ^2.4.1"; added=1}
              {print}
              END{
                if(in_dev==1 && added==0) print "  flutter_native_splash: ^2.4.1";
                if(in_dev==0){print "dev_dependencies:"; print "  flutter_native_splash: ^2.4.1"}
              }' pubspec.yaml > pubspec.yaml.new && mv pubspec.yaml.new pubspec.yaml
          fi
          flutter pub get

      - name: Generate launcher icons (Android only)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f flutter_launcher_icons-android.yaml ] && [ -f assets/icon/icon.png ]; then
            flutter pub run flutter_launcher_icons:main -f flutter_launcher_icons-android.yaml
          else
            echo "launcher icon config or image missing: skipping"
          fi

      - name: Generate native splash (Android)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f flutter_native_splash.yaml ]; then
            flutter pub run flutter_native_splash:create --path=flutter_native_splash.yaml
          else
            echo "no splash yaml; skipping"
          fi

      - name: Build DEBUG APK (dev-friendly signing)
        run: |
          flutter build apk --debug \
            --build-number="${GITHUB_RUN_NUMBER}" \
            --build-name="$(date +'%Y.%m.%d').${GITHUB_RUN_NUMBER}"

      - uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
