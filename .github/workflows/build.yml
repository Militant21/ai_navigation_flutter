name: Flutter APK CI

on:
  push:
    paths-ignore:
      - "**/*.md"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept licenses
        run: yes | sdkmanager --licenses

      - name: Install SDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-35" "build-tools;34.0.0"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: "3.35.2"
          cache: true

      - name: Resolve packages
        run: flutter pub get

      - name: Clean Android directory
        run: rm -rf android

      - name: Recreate Android project
        run: flutter create --platforms=android .
           
      - name: Generate launcher icons
        run: flutter pub run flutter_launcher_icons

      - name: Clean and Generate native splash
        run: |
          flutter pub run flutter_native_splash:remove
          flutter pub run flutter_native_splash:create

      - name: Patch AndroidManifest.xml for permissions
        run: |
          chmod +x ci/patch_manifest.sh
          ./ci/patch_manifest.sh

      - name: Set Android SDK levels (min=30, compile/target=35) + Gradle 8.11.1
        run: |
          set -e
          # app/build.gradle.kts
          if [ -f android/app/build.gradle.kts ]; then
            sed -i 's/minSdk = [0-9]\+/minSdk = 30/' android/app/build.gradle.kts || true
            sed -i 's/compileSdk = [0-9]\+/compileSdk = 35/' android/app/build.gradle.kts || true
            sed -i 's/targetSdk = [0-9]\+/targetSdk = 35/' android/app/build.gradle.kts || true
          fi
          # app/build.gradle (Groovy)
          if [ -f android/app/build.gradle ]; then
            sed -i 's/minSdkVersion [0-9]\+/minSdkVersion 30/' android/app/build.gradle || true
            sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 35/' android/app/build.gradle || true
            sed -i 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/' android/app/build.gradle || true
          fi
          # root fallback
          if [ -f android/build.gradle ]; then
            sed -i 's/compileSdkVersion [0-9]\+/compileSdkVersion 35/' android/build.gradle || true
            sed -i 's/targetSdkVersion [0-9]\+/targetSdkVersion 35/' android/build.gradle || true
          fi
          if [ -f android/build.gradle.kts ]; then
            sed -i 's/compileSdk = [0-9]\+/compileSdk = 35/' android/build.gradle.kts || true
            sed -i 's/targetSdk = [0-9]\+/targetSdk = 35/' android/build.gradle.kts || true
          fi
          # Gradle wrapper 8.11.1
          if [ -f android/gradle/wrapper/gradle-wrapper.properties ]; then
            sed -i 's#distributionUrl=.*#distributionUrl=https\://services.gradle.org/distributions/gradle-8.11.1-all.zip#' android/gradle/wrapper/gradle-wrapper.properties
          fi

      - name: Enable core library desugaring (KTS/Groovy)
        run: |
          set -e
          # KTS
          if [ -f android/app/build.gradle.kts ] && ! grep -q "coreLibraryDesugaringEnabled" android/app/build.gradle.kts; then
            cat >> android/app/build.gradle.kts <<'EOF'
              android {
               compileOptions {
                 sourceCompatibility = JavaVersion.VERSION_17
                 targetCompatibility = JavaVersion.VERSION_17
                 isCoreLibraryDesugaringEnabled = true
                }
              }
              dependencies {
                 coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")
                }
          EOF
          fi
          # Groovy
          if [ -f android/app/build.gradle ] && ! grep -q "coreLibraryDesugaringEnabled" android/app/build.gradle; then
             cat >> android/app/build.gradle <<'EOF'
               android {
                 compileOptions {
                   sourceCompatibility JavaVersion.VERSION_17
                   targetCompatibility JavaVersion.VERSION_17
                   coreLibraryDesugaringEnabled true
                 }
               }
               dependencies {
                   coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.4'
               }
          EOF
          fi

      - name: Align Kotlin/Java to JVM 17
        run: |
          set -e
          # gradle.properties
          if [ -f android/gradle.properties ] && ! grep -q '^kotlin\.compiler\.jvmTarget=17$' android/gradle.properties; then
            echo 'kotlin.compiler.jvmTarget=17' >> android/gradle.properties
          fi
          # KTS
          if [ -f android/app/build.gradle.kts ] && ! grep -q 'jvmTarget = "17"' android/app/build.gradle.kts; then
             cat >> android/app/build.gradle.kts <<'EOF'
               kotlin {
                 jvmToolchain(17)
               }
               android {
                 kotlinOptions {
                   jvmTarget = "17"
                 }
               }
          EOF
          fi
          # Groovy
          if [ -f android/app/build.gradle ] && ! grep -q "jvmTarget = '17'" android/app/build.gradle; then
             cat >> android/app/build.gradle <<'EOF'
              kotlin {
               jvmToolchain(17)
              }
             android {
               kotlinOptions {
                jvmTarget = '17'
               }
             }
          EOF
          fi

      - name: Build DEBUG APK
        run: flutter build apk --debug

      - name: Upload DEBUG APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-debug
          path: build/app/outputs/flutter-apk/app-debug.apk
