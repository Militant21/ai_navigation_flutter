name: build
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java (Temurin 21)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.3'
          channel: stable
          cache: true

      - name: Ensure Android folder exists
        run: flutter create --platforms=android .

      - name: flutter pub get
        run: flutter pub get

      - name: Build APK (release) with minSdk override
        run: |
          set -e
          echo "== Checking and fixing minSdk values =="
          # app build.gradle
          if grep -q "minSdkVersion 21" android/app/build.gradle; then
            sed -i 's/minSdkVersion 21/minSdkVersion 30/' android/app/build.gradle
            echo "Patched android/app/build.gradle"
          fi
          if grep -q "minSdk = 21" android/app/build.gradle.kts; then
            sed -i 's/minSdk = 21/minSdk = 30/' android/app/build.gradle.kts
            echo "Patched android/app/build.gradle.kts"
          fi
          if grep -q "minSdkVersion=21" android/gradle.properties; then
            sed -i 's/minSdkVersion=21/minSdkVersion=30/' android/gradle.properties
            echo "Patched android/gradle.properties"
          fi

          echo "== Cleaning plugin manifests =="
          find build -name AndroidManifest.xml | while read -r f; do
            if grep -q "<uses-sdk" "$f"; then
              sed -i -E '/<uses-sdk.*>/d' "$f"
              echo "Cleaned <uses-sdk> in $f"
            fi
          done

          echo "== Starting release build =="
          flutter build apk --release

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
